"--[[\n"
"	A merge sort routine in lua/luajit\n"
"]]\n"
"\n"
"local function mergeHalves(array, first, last)\n"
"	local left = first\n"
"	local leftTail = math.floor((first + last) / 2)\n"
"	local right = leftTail + 1\n"
"	local temp = {unpack(array)}\n"
"\n"
"	-- Compare left and right halves of array, sort into temp --\n"
"	for i = first, last do\n"
"		if (right > last or ((array[left] <= array[right]) and left <= leftTail)) then\n"
"			temp[i] = array[left]\n"
"			left = left + 1\n"
"		else\n"
"			temp[i] = array[right]\n"
"			right = right + 1\n"
"		end\n"
"	end\n"
"\n"
"	-- Copy sorted section back to array --\n"
"	for i = first, last do\n"
"		array[i] = temp[i]\n"
"	end\n"
"end\n"
"\n"
"local function mergeSort(array, first, last)\n"
"	local first = 1\n"
"	local last = #array\n"
"	-- Size == 1 --\n"
"	if first < last then\n"
"		local middle = math.floor((first + last) / 2)\n"
"		mergeSort(array, first, middle)\n"
"		mergeSort(array, (middle+1), last)\n"
"		mergeHalves(array, first, last)\n"
"	end\n"
"end\n"
"\n"
"return mergeSort\n"
