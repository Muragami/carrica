"/*\n"
"	We have some linkage here to allow the wren code to interface to the host (lua in this case)\n"
"*/\n"
"\n"
"\n"
"// this is a lua/host side array\n"
"foreign class Array {\n"
"	construct new() { }\n"
"	construct copy(other) { addAll(other) }\n"
"	foreign static filled(size, element)\n"
"	foreign static fromList(list)\n"
"\n"
"	foreign [idx]\n"
"	foreign [idx]=(value)\n"
"	foreign add(item)\n"
"	foreign addAll(other)\n"
"	foreign clear()\n"
"	foreign count\n"
"	foreign indexOf(value)\n"
"	foreign insert(index, item)\n"
"	foreign remove(value)\n"
"	foreign removeAt(index)\n"
"	foreign sort()\n"
"	foreign swap(a, b)\n"
"	foreign +(other)\n"
"	foreign *(count)\n"
"	foreign list\n"
"	foreign hold()\n"
"	foreign release()\n"
"	foreign iterate(iter)\n"
"	foreign iteratorValue(iter)\n"
"}\n"
"\n"
"foreign class TableEntry {\n"
"	construct new() { }\n"
"\n"
"	foreign key\n"
"	foreign value\n"
"}\n"
"\n"
"// this is a lua/host side table\n"
"foreign class Table {\n"
"	construct new() { }\n"
"\n"
"	construct copy(other) { insertAll(other) }\n"
"\n"
"	static fromMap(map) {\n"
"		var ret = Table.new()\n"
"		for (entry in map) {\n"
"			ret[entry.key] = entry.value\n"
"		}\n"
"		return ret\n"
"	}\n"
"\n"
"	foreign [key]\n"
"	foreign [key]=(value)\n"
"	foreign clear()\n"
"	foreign containsKey(key)\n"
"	foreign count\n"
"	foreign keys\n"
"	foreign values\n"
"	foreign array\n"
"	foreign list\n"
"	foreign hold()\n"
"	foreign release()\n"
"	foreign finsertAll(other)\n"
"	foreign iterate(iter)\n"
"	foreign iteratorValue(iter)\n"
"\n"
"	insertAll(other) {\n"
"		if (other is Map) {\n"
"			for (entry in other) {\n"
"				this[entry.key] = entry.value\n"
"			}\n"
"		} else finsertAll(other)\n"
"	}\n"
"}\n"
"\n"
"// this allows you to make calls on the host via 'handlers' installed\n"
"class Host {\n"
"	// get a reference to a handler from it's name\n"
"	foreign static ref(name)\n"
"	// make a call via a handler reference\n"
"	foreign static call(ref)\n"
"	foreign static call(ref, a)\n"
"	foreign static call(ref, a, b)\n"
"	foreign static call(ref, a, b, c)\n"
"	foreign static call(ref, a, b, c, d)\n"
"	foreign static call(ref, a, b, c, d, e)\n"
"	foreign static call(ref, a, b, c, d, e, f)\n"
"	foreign static call(ref, a, b, c, d, e, f, g)\n"
"	foreign static call(ref, a, b, c, d, e, f, g, h)\n"
"\n"
"	static version { \"0.1.0 Tenma\" }\n"
"}\n"
"\n"
"/*\n"
"\n"
"// NYI: this is a host side buffer memory block\n"
"foreign class Buffer {\n"
"	construct new(mode, sz) {\n"
"		setMode(mode)\n"
"		size(sz) }\n"
"\n"
"	foreign [idx]\n"
"	foreign [idx]=(value)\n"
"	foreign clear()\n"
"	foreign count\n"
"	foreign mode\n"
"	foreign setMode(mode)\n"
"	foreign size(count)\n"
"	foreign copy(other)\n"
"	foreign slice(start, end)\n"
"	foreign hold()\n"
"	foreign release()\n"
"}\n"
"\n"
"*/\n"
